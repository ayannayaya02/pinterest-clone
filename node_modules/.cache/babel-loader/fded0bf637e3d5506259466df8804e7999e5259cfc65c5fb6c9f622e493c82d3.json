{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Starg\\\\profile\\\\pinterest-clone\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [pins, setNewPins] = useState([]);\n  const getImages = term => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term\n      }\n    });\n  };\n  const onSearchSubmit = term => {\n    for (let i = 0; i < onSearchSubmit.length; i++) {\n      console.log(term);\n      getImages(term).then(res => {\n        let results = res.data.results;\n        let newNew = [...results, ...pins];\n        newNew.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        setNewPins(newNew);\n      });\n    }\n  };\n  const getNewPins = () => {\n    _s();\n    let promises = [];\n    let pinData = [];\n    let pins = [\"ocean\", \"Paris\", \"dogs\", \"wolves\", \"quotes\", \"religion\", \"spirituality\", \"huskies\", \"tattoos\", \"love\", \"God\", \"hummingbirds\", \"wedding\", \"martial arts\", \"food\", \"travel\"];\n    pins.forEach(pinTerm => {\n      promises.push(getImages(pinTerm).then(res => {\n        let results = res.data.results;\n        console.log(results);\n        pinData = pinData.concat(results);\n        pinData.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n      }));\n    });\n    Promise.all(promises).then(() => {\n      setNewPins(pinData);\n    });\n    useEffect(() => {\n      getNewPins();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onSubmit: onSearchSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Mainboard, {\n          pins: pins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this);\n  };\n  _s(getNewPins, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n_s2(App, \"2FII6Ngyf/vHyW/ojm6iqoJAQe4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mainboard","splash","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","pins","setNewPins","getImages","term","get","params","query","onSearchSubmit","i","length","console","log","then","res","results","data","newNew","sort","a","b","Math","random","getNewPins","promises","pinData","forEach","pinTerm","push","concat","Promise","all","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Starg/profile/pinterest-clone/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n\n  const getImages = (term) => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term,\n      },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    for (let i=0; i<onSearchSubmit.length; i++){\n    console.log(term);\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let newNew = [...results, ...pins];\n\nnewNew.sort(function(a, b){\n  return 0.5 - Math.random();\n});\nsetNewPins(newNew);\n\n\n\n    });\n  }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\n      \"ocean\",\n      \"Paris\",\n      \"dogs\",\n      \"wolves\",\n      \"quotes\",\n      \"religion\",\n      \"spirituality\",\n      \"huskies\",\n      \"tattoos\",\n      \"love\",\n      \"God\",\n      \"hummingbirds\",\n      \"wedding\",\n      \"martial arts\",\n      \"food\",\n      \"travel\",\n    ];\n\n    pins.forEach((pinTerm) => {\n      promises.push(\n        getImages(pinTerm).then((res) => {\n          let results = res.data.results;\n          console.log(results);\n          pinData = pinData.concat(results);\n          pinData.sort(function (a, b) {\n            return 0.5 - Math.random();\n          });\n        })\n      );\n    });\n\n    Promise.all(promises).then(() => {\n      setNewPins(pinData);\n\n    });\nuseEffect(() => {\n  getNewPins();\n}, []);\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header onSubmit={onSearchSubmit} />\n        <Mainboard pins={pins} />\n      </header>\n    </div>  \n  );\n  }\n}\n  \n   \n\nexport default App;\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}