{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Starg\\\\profile\\\\pinterest-clone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is typing rfce and pressing tab */\n/*For any components don't forget to also import them above! */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pins, setNewPins] = useState([]);\n  const getImages = term => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term\n      }\n    });\n  };\n  const onSearchSubmit = term => {\n    for (let i = 0; i < onSearchSubmit.length; i++) {\n      console.log(term);\n      getImages(term).then(res => {\n        let results = res.data.results;\n        let newNew = [...results, ...pins];\n        newNew.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        setNewPins(newNew);\n      });\n    }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\"ocean\", \"Paris\", \"dogs\", \"wolves\", \"quotes\", \"religion\", \"spirituality\", \"huskies\", \"tattoos\", \"love\", \"God\", \"hummingbirds\", \"wedding\", \"martial arts\", \"food\", \"travel\"];\n    pins.forEach(pinTerm => {\n      for (let i = 0; i < pins.length; i++);\n      pinData.push();\n      while (getNewPins === pins) {\n        getNewPins.sort(promises);\n        return pins.sort(pinData);\n      }\n    });\n    pins.forEach(pinTerm => {\n      promises.push(getImages(pinTerm).then(res => {\n        let results = res.data.results;\n        console.log(results);\n        pinData = pinData.concat(results);\n        pinData.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n      }));\n    });\n    Promise.all(promises).then(() => {\n      setNewPins(pinData);\n    });\n  };\n  const pinData = () => {\n    pinData.sort(pins);\n  };\n  useEffect(() => {\n    getNewPins();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSubmit: onSearchSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mainboard, {\n      pins: pins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P7r1voI66Rgc8jhArLp5JlF9Hs4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Mainboard","splash","jsxDEV","_jsxDEV","App","_s","pins","setNewPins","getImages","term","get","params","query","onSearchSubmit","i","length","console","log","then","res","results","data","newNew","sort","a","b","Math","random","getNewPins","promises","pinData","forEach","pinTerm","push","concat","Promise","all","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Starg/profile/pinterest-clone/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, {useState, useEffect } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is typing rfce and pressing tab */\n/*For any components don't forget to also import them above! */\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n\n  const getImages = (term) => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term,\n      },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    for (let i=0; i<onSearchSubmit.length; i++){\n    console.log(term);\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let newNew = [...results, ...pins];\n\nnewNew.sort(function(a, b){\n  return 0.5 - Math.random();\n});\nsetNewPins(newNew);\n\n    });\n  }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\n      \"ocean\",\n      \"Paris\",\n      \"dogs\",\n      \"wolves\",\n      \"quotes\",\n      \"religion\",\n      \"spirituality\",\n      \"huskies\",\n      \"tattoos\",\n      \"love\",\n      \"God\",\n      \"hummingbirds\",\n      \"wedding\",\n      \"martial arts\",\n      \"food\",\n      \"travel\",\n    ];\n\npins.forEach((pinTerm)=>{\n  for(let i=0; i<pins.length;i++);\n  pinData.push();\n  while(getNewPins===pins){\n    getNewPins.sort(promises);\n    return pins.sort(pinData);\n  }\n})\n\n\n\n\n\n\n\n\n\npins.forEach((pinTerm) => {\n  promises.push(\n    getImages(pinTerm).then((res)=>{\n      let results = res.data.results;\n      console.log(results);\n      pinData=pinData.concat(results)\n      pinData.sort(function(a,b){\n        return 0.5 - Math.random();\n      });\n    })\n  );\n});\nPromise.all(promises).then(()=>{\n  setNewPins(pinData);\n});\n  };\n\n\n\n\n\nconst pinData=()=>{\n  pinData.sort(pins)\n}\n\n\n\n\n\n  useEffect(()=>{\n    getNewPins();\n  }, []);\n\n\n  return (\n    <div className = \"app\">\n      <Header onSubmit = {onSearchSubmit}/>\n      <Mainboard pins = {pins}/>\n      </div>\n  );\n}\n  \n   \n\nexport default App;\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}