{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Starg\\\\profile\\\\pinterest-clone\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [pins, setNewPins] = useState([]);\n  const getImages = term => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term\n      }\n    });\n  };\n  const onSearchSubmit = term => {\n    for (let i = 0; i < onSearchSubmit.length; i++) {\n      console.log(term);\n      getImages(term).then(res => {\n        let results = res.data.results;\n        let newNew = [...results, ...pins];\n        newNew.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        setNewPins(newNew);\n      });\n    }\n  };\n  const getNewPins = () => {\n    _s();\n    let promises = [];\n    let pinData = [];\n    let pins = [\"ocean\", \"Paris\", \"dogs\", \"wolves\", \"quotes\", \"religion\", \"spirituality\", \"huskies\", \"tattoos\", \"love\", \"God\", \"hummingbirds\", \"wedding\", \"martial arts\", \"food\", \"travel\"];\n    for (let i = 0; i < getNewPins.length; i++) {\n      return 0.5 - Math.random();\n    }\n    pins.forEach(pinTerm => {\n      pins(pinTerm).filter(pins);\n      for (let i = 0; i < pins.length; i++) {\n        pins.sort(promises);\n      }\n      pins.forEach(pinTerm => {\n        promises.push(getImages(pinTerm).then(res => {\n          let results = res.data.results;\n          console.log(results);\n          pinData = pinData.concat(results);\n          pinData.sort(function (a, b) {\n            return 0.5 - Math.random();\n          });\n        }));\n      });\n      Promise.all(promises).then(() => {\n        setNewPins(pinData);\n      });\n    });\n    useEffect(() => {\n      getNewPins();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onSubmit: onSearchSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Mainboard, {\n          pins: pins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this);\n  };\n  _s(getNewPins, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  for (let i = 0; i < getNewPins.length; i++) {\n    return 0.5 - Math.random();\n    while (getNewPins === pins) {\n      getNewPins.reduce(promises);\n      return pins.sort(pinData);\n      getNewPins.random(pins);\n      pins.forEach(pinTerm => {\n        for (let i = 0; i < pins.length; i++) {\n          pins.sort(promises);\n        }\n        promises.push(getImages(pinTerm).then(res => {\n          let results = res.data.results;\n          pinData = pinData.concat(results);\n          pinData.sort(function (a, b) {});\n        }));\n      });\n      Promise.all(promises).then(() => {\n        setNewPins(pinData, promises);\n        return 0.5 - Math.random();\n      });\n      const PinData = () => {\n        PinData.sort(pins).then(() => {\n          setNewPins.sort(pinData).all(promises);\n          setNewPins.all(pinData).all(pins);\n          return 0.5 - Math.random();\n        });\n      };\n    }\n  }\n}\n_s2(App, \"2FII6Ngyf/vHyW/ojm6iqoJAQe4=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mainboard","splash","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","pins","setNewPins","getImages","term","get","params","query","onSearchSubmit","i","length","console","log","then","res","results","data","newNew","sort","a","b","Math","random","getNewPins","promises","pinData","forEach","pinTerm","filter","push","concat","Promise","all","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","reduce","PinData","_c","$RefreshReg$"],"sources":["C:/Users/Starg/profile/pinterest-clone/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n\n  const getImages = (term) => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term,\n      },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    for (let i=0; i<onSearchSubmit.length; i++){\n    console.log(term);\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let newNew = [...results, ...pins];\n\nnewNew.sort(function(a, b){\n  return 0.5 - Math.random();\n});\nsetNewPins(newNew);\n\n\n\n    });\n  }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\n      \"ocean\",\n      \"Paris\",\n      \"dogs\",\n      \"wolves\",\n      \"quotes\",\n      \"religion\",\n      \"spirituality\",\n      \"huskies\",\n      \"tattoos\",\n      \"love\",\n      \"God\",\n      \"hummingbirds\",\n      \"wedding\",\n      \"martial arts\",\n      \"food\",\n      \"travel\"\n    ]; \n for (let i = 0; i < getNewPins.length; i++) {\n   return 0.5 - Math.random();}\n\n    pins.forEach((pinTerm) => {\n      pins(pinTerm).filter(pins);\n      for (let i = 0; i <pins.length; i++){\n        pins.sort(promises);\n      }\n\n\n   pins.forEach((pinTerm) => {\n     promises.push(\n       getImages(pinTerm).then((res) => {\n         let results = res.data.results;\n         console.log(results);\n         pinData = pinData.concat(results);\n         pinData.sort(function (a, b) {\n           return 0.5 - Math.random();\n\n         });\n       })\n     );\n   });\n     \n\n   Promise.all(promises).then(() => {\n     setNewPins(pinData);\n   });\n });\n    \n  useEffect(() => {\n    getNewPins();\n  }, []);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header onSubmit={onSearchSubmit} />\n        <Mainboard pins={pins} />\n      </header>\n    </div>\n  );\n  }\n\n  \n    for (let i=0; i < getNewPins.length; i++){\n                        return 0.5 - Math.random();\n                        while(getNewPins===pins){ \n                          getNewPins.reduce(promises);\n                          return pins.sort(pinData);\n                            getNewPins.random(pins);\n                        \n\n\n                        \n\n    pins.forEach((pinTerm) => {\n      for (let i = 0; i <pins.length; i++){\n        pins.sort(promises);\n      }\n      promises.push(\n        getImages(pinTerm).then((res) => {\n          let results = res.data.results;\n          pinData = pinData.concat(results);\n          pinData.sort(function (a, b) {\n          });\n        })\n      );\n    });\n    Promise.all(promises).then(() => {\n      setNewPins(pinData, promises);\n                  return 0.5 - Math.random();\n\n    });\n\n    const PinData = () => {\n      PinData.sort(pins).then(() => {\n        setNewPins.sort(pinData).all(promises);\n           setNewPins.all(pinData).all(pins);\n                       return 0.5 - Math.random();\n\n\n\n      });\n    };\n\n  }\n}\n\n  };\n\n\nexport default App;\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}