{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Starg\\\\profile\\\\pinterest-clone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pins, setNewPins] = useState([]);\n  const getImages = term => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term\n      }\n    });\n  };\n  const onSearchSubmit = term => {\n    for (let i = 0; i < onSearchSubmit.length; i++) {\n      console.log(term);\n      getImages(term).then(res => {\n        let results = res.data.results;\n        let newNew = [...results, ...pins];\n        newNew.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        if (term === pins) {\n          return 4 - Math.random();\n          pins.sort(newNew);\n        }\n        onSearchSubmit(newNew).sort(newNew);\n        newNew.map(function (a, b) {\n          return 2.5 - Math.random();\n          onSearchSubmit.sort(newNew);\n          onSearchSubmit.all(pins);\n        });\n        setNewPins(newNew);\n      });\n    }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\"ocean\", \"Paris\", \"dogs\", \"wolves\", \"quotes\", \"religion\", \"spirituality\", \"huskies\", \"tattoos\", \"love\", \"God\", \"hummingbirds\", \"wedding\", \"martial arts\", \"food\", \"travel\"];\n    pins.forEach(pinTerm => {\n      promises.push(getImages(pinTerm).then(res => {\n        let results = res.data.results;\n        console.log(results);\n        pinData = pinData.concat(results);\n        pinData.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n      }));\n    });\n    Promise.all(promises).then(() => {\n      setNewPins(pinData);\n    });\n  };\n  useEffect(() => {\n    getNewPins();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onSubmit: onSearchSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mainboard, {\n        pins: pins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P7r1voI66Rgc8jhArLp5JlF9Hs4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mainboard","splash","jsxDEV","_jsxDEV","App","_s","pins","setNewPins","getImages","term","get","params","query","onSearchSubmit","i","length","console","log","then","res","results","data","newNew","sort","a","b","Math","random","map","all","getNewPins","promises","pinData","forEach","pinTerm","push","concat","Promise","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Starg/profile/pinterest-clone/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n\n  const getImages = (term) => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term,\n      },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    for (let i=0; i<onSearchSubmit.length; i++){\n    console.log(term);\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let newNew = [...results, ...pins];\n\nnewNew.sort(function(a,b){\n  return 0.5 - Math.random();\n})\n\n if (term === pins) {\n   return 4 - Math.random();\n   pins.sort(newNew);\n }\nonSearchSubmit(newNew).sort(newNew);\n\n      newNew.map(function (a, b) {\n                return 2.5 - Math.random();\n        onSearchSubmit.sort(newNew);\n        onSearchSubmit.all(pins);\n\n      }); \n\n      setNewPins(newNew);\n\n    });\n  }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\n      \"ocean\",\n      \"Paris\",\n      \"dogs\",\n      \"wolves\",\n      \"quotes\",\n      \"religion\",\n      \"spirituality\",\n      \"huskies\",\n      \"tattoos\",\n      \"love\",\n      \"God\",\n      \"hummingbirds\",\n      \"wedding\",\n      \"martial arts\",\n      \"food\",\n      \"travel\"\n    ]; \n\n\n                             \n\n    pins.forEach((pinTerm) => {\n    promises.push(getImages(pinTerm).then((res) => {\n      let results = res.data.results;\n      console.log(results);\n      pinData =pinData.concat(results);\n      pinData.sort(function(a,b){\n        return 0.5 - Math.random();\n      });\n      \n    })\n    )\n  })\n  Promise.all(promises).then(() => {\n    setNewPins(pinData);\n  });\n};\n\n  useEffect(() => {\n    getNewPins();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header onSubmit={onSearchSubmit} />\n        <Mainboard pins={pins} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}