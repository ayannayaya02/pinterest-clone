{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Starg\\\\profile\\\\pinterest-clone\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  const [pins, setNewPins] = useState([]);\n  const getImages = term => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term\n      }\n    });\n  };\n  const onSearchSubmit = term => {\n    for (let i = 0; i < onSearchSubmit.length; i++) {\n      console.log(term);\n      getImages(term).then(res => {\n        let results = res.data.results;\n        let newNew = [...results, ...pins];\n        newNew.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        setNewPins(newNew);\n      });\n    }\n  };\n  const getNewPins = () => {\n    var _s = $RefreshSig$();\n    let promises = [];\n    let pinData = [];\n    let pins = [\"ocean\", \"Paris\", \"dogs\", \"wolves\", \"quotes\", \"religion\", \"spirituality\", \"huskies\", \"tattoos\", \"love\", \"God\", \"hummingbirds\", \"wedding\", \"martial arts\", \"food\", \"travel\"];\n    _s(pins.forEach(_s(pinTerm => {\n      _s();\n      promises.push(getImages(pinTerm).then(res => {\n        let results = res.data.results;\n        console.log(results);\n        pinData = pinData.concat(results);\n        pinData.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        Promise.all(promises).then(() => {\n          setNewPins(pinData);\n        });\n      }));\n      useEffect(() => {\n        getNewPins();\n      }, []);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            onSubmit: onSearchSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Mainboard, {\n            pins: pins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this);\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  };\n}\n_s2(App, \"2FII6Ngyf/vHyW/ojm6iqoJAQe4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mainboard","splash","jsxDEV","_jsxDEV","App","_s2","pins","setNewPins","getImages","term","get","params","query","onSearchSubmit","i","length","console","log","then","res","results","data","newNew","sort","a","b","Math","random","getNewPins","_s","$RefreshSig$","promises","pinData","forEach","pinTerm","push","concat","Promise","all","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Starg/profile/pinterest-clone/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n\n  const getImages = (term) => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term,\n      },\n    });\n  };\n\n  const onSearchSubmit = (term) => {\n    for (let i=0; i<onSearchSubmit.length; i++){\n    console.log(term);\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let newNew = [...results, ...pins];\n\nnewNew.sort(function(a, b){\n  return 0.5 - Math.random();\n});\nsetNewPins(newNew);\n\n\n\n    });\n  }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\n      \"ocean\",\n      \"Paris\",\n      \"dogs\",\n      \"wolves\",\n      \"quotes\",\n      \"religion\",\n      \"spirituality\",\n      \"huskies\",\n      \"tattoos\",\n      \"love\",\n      \"God\",\n      \"hummingbirds\",\n      \"wedding\",\n      \"martial arts\",\n      \"food\",\n      \"travel\"\n    ]; \n\n \n\n    pins.forEach((pinTerm) => {\n    promises.push(getImages(pinTerm).then((res) => {\n    \n\n      let results = res.data.results;\n      console.log(results);\n      pinData =pinData.concat(results);\n      pinData.sort(function(a, b){\n        return 0.5 - Math.random();\n      \n      });\n    \n    \n    \n    \n\n  Promise.all(promises).then(() => {\n    setNewPins(pinData);\n  });\n    \n}))\n\n\n\n  useEffect(() => {\n    getNewPins();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header onSubmit={onSearchSubmit} />\n        <Mainboard pins={pins} />\n      </header>\n    </div>\n  );\n    });\n\n  }\n  }\n\n\nexport default App;\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}