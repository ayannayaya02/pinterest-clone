{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Starg\\\\profile\\\\pinterest-clone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pins, setNewPins] = useState([]);\n  const getImages = term => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term\n      }\n    });\n  };\n  getImages(pins).then(setNewPins);\n  const onSearchSubmit = term => {\n    for (let i = 0; i < onSearchSubmit.length; i++) {\n      console.log(term);\n      getImages(term).then(res => {\n        let results = res.data.results;\n        let newNew = [...results, ...pins];\n        if (onSearchSubmit !== term) {\n          console.log(term);\n          getImages(res).all(pins);\n        }\n        if (term === pins) {\n          return 4 - Math.random();\n          pins.sort(newNew);\n        }\n        onSearchSubmit(newNew).reduce(newNew);\n        newNew.map(function (a, b) {\n          return 2.5 - Math.random();\n          onSearchSubmit.sort(newNew);\n          onSearchSubmit.all(pins);\n        });\n        setNewPins(newNew);\n      });\n    }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\"ocean\", \"Paris\", \"dogs\", \"wolves\", \"quotes\", \"religion\", \"spirituality\", \"huskies\", \"tattoos\", \"love\", \"God\", \"hummingbirds\", \"wedding\", \"martial arts\", \"food\", \"travel\"];\n    for (let i = 0; i < getNewPins.length; i++) {\n      return 0.5 - Math.random();\n      while (getNewPins === pins) {\n        getNewPins.reduce(pins);\n        return pins.sort(pinData);\n        getNewPins.random(pins);\n        pins.forEach(pinTerm => {\n          for (let i = 0; i < pins.length; i++) {\n            pins.reduce(promises);\n          }\n          promises.push(getImages(pinTerm).then(res => {\n            let results = res.data.results;\n            pinData = pinData.concat(results);\n            pinData.sort(function (a, b) {});\n          }));\n        });\n        Promise.all(promises).then(() => {\n          setNewPins(pinData, promises);\n          return 0.5 - Math.random();\n        });\n        const PinData = () => {\n          PinData.sort(pins).then(() => {\n            setNewPins.sort(pinData).all(promises);\n            setNewPins.all(pinData).all(pins);\n            return 0.5 - Math.random();\n          });\n        };\n      }\n    }\n  };\n  useEffect(() => {\n    getNewPins();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onSubmit: onSearchSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mainboard, {\n        pins: pins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P7r1voI66Rgc8jhArLp5JlF9Hs4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mainboard","splash","jsxDEV","_jsxDEV","App","_s","pins","setNewPins","getImages","term","get","params","query","then","onSearchSubmit","i","length","console","log","res","results","data","newNew","all","Math","random","sort","reduce","map","a","b","getNewPins","promises","pinData","forEach","pinTerm","push","concat","Promise","PinData","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Starg/profile/pinterest-clone/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./ingredients/Header\";\nimport Mainboard from \"./ingredients/Mainboard\";\nimport splash from \"./api/splash\";\nimport \"./App.css\";\n\n/*Trick for making files quicker is using rfce and tab */\n/*For any components don't forget to also import them above! */\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n\n  const getImages = (term) => {\n    return splash.get(\"https://api.unsplash.com/search/photos/\", {\n      params: {\n        query: term,\n      },\n    });\n  };\n  getImages(pins).then(setNewPins);\n\n  const onSearchSubmit = (term) => {\n    for (let i=0; i<onSearchSubmit.length; i++){\n    console.log(term);\n    getImages(term).then((res) => {\n      let results = res.data.results;\n\n      let newNew = [...results, ...pins];\n\nif(onSearchSubmit !== term){\n  console.log(term);\n  getImages(res).all(pins);\n}\n\n if (term === pins) {\n   return 4 - Math.random();\n   pins.sort(newNew);\n }\nonSearchSubmit(newNew).reduce(newNew);\n\n      newNew.map(function (a, b) {\n                return 2.5 - Math.random();\n        onSearchSubmit.sort(newNew);\n        onSearchSubmit.all(pins);\n\n      }); \n\n      setNewPins(newNew);\n\n    });\n  }\n  };\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n    let pins = [\n      \"ocean\",\n      \"Paris\",\n      \"dogs\",\n      \"wolves\",\n      \"quotes\",\n      \"religion\",\n      \"spirituality\",\n      \"huskies\",\n      \"tattoos\",\n      \"love\",\n      \"God\",\n      \"hummingbirds\",\n      \"wedding\",\n      \"martial arts\",\n      \"food\",\n      \"travel\"\n    ]; \n\n\n    for (let i=0; i < getNewPins.length; i++){\n                        return 0.5 - Math.random();\n                        while(getNewPins===pins){ \n                          getNewPins.reduce(pins);\n                          return pins.sort(pinData);\n                            getNewPins.random(pins);\n\n\n  \n\n    pins.forEach((pinTerm) => {\n      for (let i = 0; i <pins.length; i++){\n        pins.reduce(promises);\n      }\n      promises.push(\n        getImages(pinTerm).then((res) => {\n          let results = res.data.results;\n          pinData = pinData.concat(results);\n          pinData.sort(function (a, b) {\n          });\n        })\n      );\n    });\n    Promise.all(promises).then(() => {\n      setNewPins(pinData, promises);\n                  return 0.5 - Math.random();\n\n    });\n\n    const PinData = () => {\n      PinData.sort(pins).then(() => {\n        setNewPins.sort(pinData).all(promises);\n           setNewPins.all(pinData).all(pins);\n                       return 0.5 - Math.random();\n\n\n\n      });\n    };\n\n  }\n}\n\n  };\n  \n\n\n  useEffect(() => {\n    getNewPins();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header onSubmit={onSearchSubmit} />\n        <Mainboard pins={pins} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}